// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  password String
  email String @unique
  created_at DateTime @default(now())

  created_surveys Survey[]
  responded_surveys SurveyRespondant[]
  role Role @relation(fields: [role_id], references: [id])
  role_id String

  @@map("users")
}

model Role {
  id String @id @default(uuid())
  title String

  users User[]
  permissions Permission[]

  @@map("roles")
}

model Permission {
  id String @id @default(uuid())
  action String
  roles Role[]

  @@map("permissions")
}

model Survey {
  id String @id @default(uuid())
  title String
  description String
  completed_at DateTime?
  created_at DateTime @default(now())
  
  answers Answer[]
  questions Question[]
  respondants SurveyRespondant[]
  author User @relation(fields: [author_id], references: [id])
  author_id String

  @@map("surveys")
}

model Question {
  id String @id @default(uuid())
  title String

  choices Choice[]
  survey Survey @relation(fields: [survey_id], references: [id], onDelete: Cascade)
  survey_id String 


  @@map("questions")
}

model Choice {
  id String @id @default(uuid())
  title String

  question Question @relation(fields: [question_id], references: [id], onDelete: Cascade)
  question_id String

  @@map("choices")
}

model Answer {
  id String @id @default(uuid())
  respondant_id String
  question_title String
  choice_title String
  responded_at DateTime @default(now())

  survey Survey @relation(fields: [survey_id], references: [id], onDelete: Cascade)
  survey_id String

  @@map("answers")
}

model SurveyRespondant {
  respondant User @relation(fields: [respondant_id], references: [id], onDelete: Cascade)
  respondant_id String
  survey Survey @relation(fields: [survey_id], references: [id], onDelete: Cascade)
  survey_id String
  responded_at DateTime @default(now())

  @@id([respondant_id, survey_id])
  @@map("survey_respondants")
}
